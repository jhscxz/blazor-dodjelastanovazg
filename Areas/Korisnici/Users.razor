@page "/admin/users"
@attribute [Authorize(Roles = "Admin,SuperAdmin")]

@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using MudBlazor
@using DodjelaStanovaZG.Services
@using DodjelaStanovaZG.DTO
@using Microsoft.AspNetCore.Authorization
@using DodjelaStanovaZG.Components.UI

@inject UserManager<IdentityUser> UserManager
@inject IUserService UserService
@inject NavigationManager Navigation

<Container>
    <MudPaper Class="pa-4">
        <!-- Kontejner za pretragu i filter, postavljen horizontalno -->
        <div style="display: flex; align-items: center; gap: 1rem; margin-bottom: 1rem;">

            <!-- Polje za pretragu u "Text" varijanti -->
            <MudTextField Label="Pretraga korisnika"
                          Value="@searchText"
                          ValueChanged="@((string e) => OnValueChanged(e))"
                          Immediate="true"
                          DebounceInterval="300"
                          Variant="Variant.Text"
                          Color="Color.Primary"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search" />

            <!-- Select za filtriranje po roli, također "Text" varijanta -->
            <MudSelect T="string"
                       Label="Role:"
                       @bind-Value="filterRole"
                       @bind-Value:after="OnFilterRoleChanged"
                       Variant="Variant.Text"
                       Color="Color.Primary"
                       Dense="true"
                       Style="min-width: 120px;">
                <MudSelectItem T="string" Value="@RoleNames.All">@RoleNames.All</MudSelectItem>
                <MudSelectItem T="string" Value="@RoleNames.User">@RoleNames.User</MudSelectItem>
                <MudSelectItem T="string" Value="@RoleNames.Admin">@RoleNames.Admin</MudSelectItem>
                <MudSelectItem T="string" Value="@RoleNames.SuperAdmin">@RoleNames.SuperAdmin</MudSelectItem>
            </MudSelect>

        </div>


        <!-- Tablica s korisničkim podacima -->
        <MudTable T="UserDto"
                  ServerData="LoadUsers"
                  Hover="true"
                  Striped="true"
                  RowsPerPage="@rowsPerPage"
                  Dense="true"
                  Class="my-custom-table"
                  @ref="table">

            <ToolBarContent>
                <MudText Typo="Typo.h6">Lista korisnika</MudText>
                <MudSpacer />
            </ToolBarContent>

            <HeaderContent>
                <MudTh>Username</MudTh>
                <MudTh>Email</MudTh>
                <MudTh>Roles</MudTh>
                <MudTh>Actions</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd DataLabel="Username">@context.UserName</MudTd>
                <MudTd DataLabel="Email">@context.Email</MudTd>
                <MudTd DataLabel="Roles">@context.Roles</MudTd>
                <MudTd DataLabel="Actions">
                    <button @onclick="@(() => EditUser(@context.Id))"
                            class="inline-flex items-center p-2 text-blue-600 hover:text-blue-800 border border-blue-600 rounded">
                        <svg xmlns="http://www.w3.org/2000/svg"
                             fill="none"
                             viewBox="0 0 24 24"
                             stroke-width="1.5"
                             stroke="currentColor"
                             class="w-5 h-5">
                            <path stroke-linecap="round"
                                  stroke-linejoin="round"
                                  d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" />
                        </svg>
                    </button>
                </MudTd>



            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudPaper>
</Container>


@code {
    // Ref na MudTable
    private MudTable<UserDto> table;

    // Privatna polja za pretragu, filtriranje i broj redova
    private string searchText = "";
    private string filterRole = RoleNames.All;
    private int rowsPerPage = 5;

    /// <summary>
    /// Metoda se poziva kad se mijenja pretraga.
    /// </summary>
    private async Task OnValueChanged(string newValue)
    {
        searchText = newValue;
        if (table != null)
        {
            await table.ReloadServerData();
        }
    }

    /// <summary>
    /// Metoda se poziva kad se mijenja odabrana rola u filteru.
    /// </summary>
    private async Task OnFilterRoleChanged()
    {
        Console.WriteLine($"[FilterRole changed] => {filterRole}");
        if (table != null)
        {
            await table.ReloadServerData();
        }
    }

    /// <summary>
    /// Dohvat podataka server-side uz filtriranje i pretragu.
    /// </summary>
    private async Task<TableData<UserDto>> LoadUsers(TableState state, CancellationToken cancellationToken)
    {
        Console.WriteLine($"LoadUsers => Page={state.Page}, PageSize={state.PageSize}, searchText='{searchText}', filterRole='{filterRole}'");
        // Prosljeđujemo searchText i filterRole u UserService
        return await UserService.GetUsersAsync(UserManager, searchText, filterRole, state, cancellationToken);
    }

    /// <summary>
    /// Navigira na stranicu za uređivanje korisnika.
    /// </summary>
    private void EditUser(string userId)
    {
        Navigation.NavigateTo($"/admin/users/edit/{userId}");
    }

    /// <summary>
    /// Briše korisnika i ponovno učitava tablicu.
    /// </summary>
    private async Task DeleteUser(string userId)
    {
        bool success = await UserService.DeleteUserAsync(UserManager, userId);
        if (success && table != null)
        {
            await table.ReloadServerData();
        }
    }
}

@using DodjelaStanovaZG.Areas.SocijalniNatjecaj.DTO
@using DodjelaStanovaZG.Enums
@using MudBlazor
@using DodjelaStanovaZG.Components.UI.MudInputs
@inject NavigationManager Navigation

@code {
    [Parameter]
    public SocijalniNatjecajZahtjevDto Detalji { get; set; } = new();
}

<MudStack Spacing="4">

    <!-- MudCard -->
    <MudCard Outlined="true" Class="pa-4">

        <!-- Klasa predmeta i Datum podnošenja u gridu -->
        <MudGrid Gutter="Size.Small">
            <!-- Klasa predmeta -->

            <MudItem xs="12" sm="6">
                <TextInput T="string" Label="Klasa predmeta" Value="@Detalji.KlasaPredmeta.ToString()" ReadOnly="true"/>
            </MudItem>
            
            <MudItem xs="12" sm="6">
                <TextInput T="string"
                           Label="Klasa predmeta"
                           @bind-Value="KlasaPredmetaAsString"
                           ReadOnly="true" />
            </MudItem>

            <!-- Datum podnošenja -->
            <MudItem xs="12" sm="6">
                <MudTextField ShrinkLabel T="string"
                              Value="@($"{Detalji.DatumPodnosenjaZahtjeva:dd.MM.yyyy}")"
                              Label="Datum podnošenja"
                              ReadOnly="true"
                              Typo="Typo.subtitle1"
                              Variant="Variant.Text"
                              Margin="Margin.Dense"
                              Class="mb-0" />
            </MudItem>
        </MudGrid>

        <!-- Adresa -->
        <MudTextField ShrinkLabel T="string"
                      Value="@Detalji.Adresa"
                      Label="Adresa"
                      ReadOnly="true"
                      Typo="Typo.subtitle1"
                      Variant="Variant.Text"
                      Margin="Margin.Dense"
                      Class="mb-0" />

        <!-- Napomena obrade -->
        <MudItem xs="12">
            <MudTextField ShrinkLabel T="string"
                          Label="Napomena"
                          Value="@Detalji.NapomenaObrade"
                          ReadOnly="true"
                          Typo="Typo.subtitle1"
                          Variant="Variant.Text" 
                          Margin="Margin.Dense"
                          Class="mb-4"
                          Lines="3" />
        </MudItem>

    </MudCard>

    <!-- MudChip i Gumb za Editiranje u istom redu -->
    <MudStack Spacing="2" Row="true" Justify="Justify.SpaceBetween">
        <MudStack Spacing="2" Direction="Row">
            <MudChip T="string"
                     Variant="@ChipVariant"
                     Color="@ChipColor"
                     Size="Size.Small"
                     StartIcon="@ChipIcon"
                     Class="px-2 py-1 rounded-sm">
                @ChipText
            </MudChip>
        </MudStack>

        <MudButton StartIcon="@Icons.Material.Filled.Edit"
                   Variant="Variant.Filled"
                   Size="Size.Small"
                   Style="border: 1px solid #d3d3d3;"
                   DropShadow="false"
                   IconColor="Color.Info"
                   Color="Color.Default"
                   OnClick="@(() => Navigation.NavigateTo($"/socijalni/osnovno/edit/{Detalji.Id}"))">
            Uredi osnovne podatke
        </MudButton>
    </MudStack>

</MudStack>
@code {
    private Color ChipColor => Detalji.RezultatObrade switch
    {
        RezultatObrade.Neosnovan => Color.Error,
        RezultatObrade.Nepotpun => Color.Warning,
        RezultatObrade.Zadovoljava => Color.Success,
        _ => Color.Default
    };

    private string ChipIcon => Detalji.RezultatObrade switch
    {
        RezultatObrade.Neosnovan => Icons.Material.Filled.Dangerous,
        RezultatObrade.Nepotpun => Icons.Material.Filled.Warning,
        RezultatObrade.Zadovoljava => Icons.Material.Filled.CheckCircle,
        _ => Icons.Material.Filled.Info
    };

    private string ChipText => Detalji.RezultatObrade switch
    {
        RezultatObrade.Neosnovan => "Neosnovan",
        RezultatObrade.Nepotpun => "Nepotpuno",
        RezultatObrade.Zadovoljava => "Ispunjava uvjete",
        _ => "Nepoznato"
    };

    private Variant ChipVariant => Detalji.RezultatObrade == RezultatObrade.Zadovoljava
        ? Variant.Outlined
        : Variant.Text;
    
    private string? KlasaPredmetaAsString
    {
        get => Detalji.KlasaPredmeta.ToString();
        set => throw new NotImplementedException();
    }

}

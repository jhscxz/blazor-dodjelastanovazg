@page "/socijalni/detalji/{Id:long}"
@using DodjelaStanovaZG.Areas.SocijalniNatjecaj.DTO
@using DodjelaStanovaZG.Areas.SocijalniNatjecaj.Pages.Components.Detalji
@using DodjelaStanovaZG.Areas.SocijalniNatjecaj.Services.IServices
@using DodjelaStanovaZG.Components.UI
@using MudBlazor
@inject ISocijalniNatjecajDetaljiService DetaljiService

<Container BreadcrumbItems="BreadcrumbItems">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" sm="10" md="8" lg="6">
            <MudCard Outlined="true" Rounded="true" Class="pa-6">
                <MudCardContent>

                    @if (_detalji is null)
                    {
                        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                    }
                    else
                    {
                        <MudTabs Color="Color.Default"
                                 Rounded="true"
                                 PanelClass="pa-6">

                            <MudTabPanel Text="Osnovni podaci">
                                <OsnovniPodaciTab Detalji="_detalji" />
                            </MudTabPanel>

                            <MudTabPanel Text="Članovi kućanstva">
                                <ClanoviKucanstvaTab Clanovi="_detalji.Clanovi" />
                            </MudTabPanel>

                            @if (_detalji.Bodovni != null)
                            {
                                <MudTabPanel Text="Opcije bodovanja">
                                    <BodovanjeOpcijeTab BodovniPodaci="_detalji.Bodovni" />
                                </MudTabPanel>
                            }
                        </MudTabs>
                    }

                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</Container>

@code {
    [Parameter]
    public long Id { get; set; }

    private SocijalniNatjecajDto? _detalji;

    protected List<Breadcrumbs.BreadcrumbItem> BreadcrumbItems { get; set; } =
    [
        new() { Text = "Početna", Url = "/" },
        new() { Text = "Socijalni natječaji", Url = "/socijalni-natjecaj" },
        new() { Text = "Detalji zahtjeva", CssClass = "text-red-500 font-bold" },
    ];

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _detalji = await DetaljiService.GetDetaljiAsync(Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Greška prilikom dohvaćanja detalja: {ex.Message}");
        }
    }
}
